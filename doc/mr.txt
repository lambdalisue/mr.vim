*mr.txt*		Asynchronous Most Recently Used/Written record plugin

Author:  Alisue <lambdalisue@hashnote.net>
License: MIT license

=============================================================================
CONTENTS						*mr-contents*

INTRODUCTION				|mr-introduction|
USAGE					|mr-usage|
INTERFACE				|mr-interface|
  VARIABLE				|mr-variable|
  FUNCTION				|mr-function|


=============================================================================
INTRODUCTION						*mr-introduction*

*mr.vim* (mr) is a plugin to asynchronously record

- MRU (Most Recently Used files)
- MRW (Most Recently Written files)
- MRR (Most Recent git Repositories)

The original idea of MRW comes from https://github.com/rbtnn/vim-mrw.


=============================================================================
USAGE							*mr-usage*

Get |List| of MRU/MRW/MRR by calling |mr#mru#list()|, |mr#mrw#list()|, or
|mr#mrr#list()| like:
>
	:echo mr#mru#list()
	:echo mr#mrw#list()
	:echo mr#mrr#list()
<

=============================================================================
INTERFACE						*mr-interface*

-----------------------------------------------------------------------------
VARIABLE						*mr-variable*

*g:mr_mru_disabled*
	Disable recording MRU.
	Default: 0

*g:mr_mrw_disabled*
	Disable recording MRW.
	Default: 0

*g:mr_mrr_disabled*
	Disable recording MRR.
	Default: 0

*g:mr#delay*
	Delay time before record files in milliseconds.
	Default: 200

*g:mr#threshold*
	The maximum number of entries of MRU/MRW to records.
	Default: 1000

*g:mr#mru#exclude*
*g:mr#mrw#exclude*
*g:mr#mrr#exclude*
	A string |pattern| to exclude path from recording.
	Default: ""

*g:mr#mru#filename*
	A filename to record MRU.
	Default: "~/.cache/mr/mru"

*g:mr#mrw#filename*
	A filename to record MRW.
	Default: "~/.cache/mr/mrw"

*g:mr#mrr#filename*
	A filename to record MRR.
	Default: "~/.cache/mr/mrr"

-----------------------------------------------------------------------------
FUNCTION						*mr-function*

						*mr#filter()*
mr#filter({items}, {path})
	Return filtered {items} by {path}. In other word, it returns children
	of {path} in {items}.
>
	" Filter mru by current working directory
	echo mr#filter(mr#mru#list(), getcwd())
<

						*mr#mru#list()*
						*mr#mrw#list()*
						*mr#mrr#list()*
mr#mru#list()
mr#mrw#list()
mr#mrr#list()
	Return a |List| of |String| which indicates MRU/MRW/MRR.

						*mr#mru#start_recording()*
						*mr#mrw#start_recording()*
						*mr#mrr#start_recording()*
mr#mru#start_recording()
mr#mrw#start_recording()
mr#mrr#start_recording()
	Start MRU/MRW/MRR recording by several |autocmd|.

						*mr#mru#stop_recording()*
						*mr#mrw#stop_recording()*
						*mr#mrr#stop_recording()*
mr#mru#stop_recording()
mr#mrw#stop_recording()
mr#mrr#stop_recording()
	Stop MRU/MRW/MRR recording by several |autocmd|.


=============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
